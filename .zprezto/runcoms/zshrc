#
# Executes commands at the start of an interactive session.  Authors: Sorin Ionescu <sorin.ionescu@gmail.com>
# 
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
if [[ -f ~/.dircolors ]]; then
    eval $(dircolors ~/.dircolors)
fi

if [[ -f ~/.lesskey ]]; then
    lesskey
fi

if [[ -f /usr/share/doc/pkgfile/command-not-found.zsh ]]; then
    source /usr/share/doc/pkgfile/command-not-found.zsh
fi

export NVM_DIR="/home/enzime/.nvm"

if [[ -s $NVM_DIR/nvm.sh ]]; then
    source $NVM_DIR/nvm.sh
fi

if [[ -s /usr/bin/virtualenvwrapper.sh ]]; then
    source /usr/bin/virtualenvwrapper.sh

    export WORKON_HOME=~/.venvs
    mkdir -p $WORKON_HOME
fi

alias _="sudo"
alias sudo="sudo "
alias md="mkdir"
alias pacman="pacmatic"
alias ls="ls -F --color=auto"
alias l="ls -lah"
alias mr="req_ssh_agent mr"
alias mp="mpv --no-video"
alias ranger="ranger-cd"
alias v="vcsh"
alias gs="git status"
alias gln="gl -n"

# fasd
alias a="fasd -a"
alias c="fasd_cd -d"
alias di="fasd -d"
alias f="fasd -f"
alias m="fasd -e mpv -f"
# alias v="fasd -e vim -f"

export VISUAL=nvim
export EDITOR=nvim

function req_ssh_agent {
    if [[ -z $SSH_AGENT_PID ]]; then
        eval $(ssh-agent)
    fi

    if [[ $(ssh-add -l) = "The agent has no identities." ]]; then
        ssh-add ~/.ssh/id_rsa
    fi

    $@
}

function gD {
    git diff --color $@ | diff-so-fancy
}

function gps {
    branch=$(git rev-parse --abbrev-ref HEAD) || return 1
    if [[ $branch != "HEAD" ]]; then
        git push --set-upstream origin $branch
    else
        echo "Not on a branch"
        return 1
    fi
}

function vd {
    vcsh $1 diff --color ${@:2} | diff-so-fancy
}

function vs {
    if [[ -z $1 ]]; then
        vcsh status
    else
        vcsh $1 status ${@:2}
    fi
}

function vp {
    if [[ -z $1 ]]; then
        req_ssh_agent vcsh push
    else
        vcsh $1 push ${@:2}
    fi
}

function vpf {
    if [[ -z $1 ]]; then
        echo "vpf requires a repository"
        return 1
    else
        vcsh $1 push --force ${@:2}
    fi
}

function vf {
    if [[ -z $1 ]]; then
        req_ssh_agent vcsh foreach fetch
    else
        vcsh $1 fetch ${@:2}
    fi
}

function folder-chooser {
    VISUAL=ranger-folder-selector zle edit-command-line
}

function file-chooser {
    VISUAL=ranger-file-selector zle edit-command-line
}

function ranger-cd {
    tempfile=$(mktemp)
    \ranger --choosedir="$tempfile" "${@:-$(pwd)}" < $TTY
    test -f "$tempfile" &&
    if [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

function carry-ranger-cd {
    ranger-cd
    VISUAL=true zle edit-command-line
}

# peco
function exists { which $1 &> /dev/null }

if exists peco; then
    function peco_select_history() {
        local tac
        exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
        BUFFER=$(fc -l -n 1 | eval $tac | peco --query "$LBUFFER")
        CURSOR=$#BUFFER         # move cursor
        zle -R -c               # refresh
    }

    zle -N peco_select_history
    bindkey '^R' peco_select_history
fi

function volume-control {
    VISUAL=alsamixer zle edit-command-line
}

function open-htop {
    VISUAL=htop zle edit-command-line
}

autoload -z edit-command-line
zle -N edit-command-line

zle -N folder-chooser
zle -N file-chooser
zle -N carry-ranger-cd
zle -N volume-control
zle -N open-htop

stty -ixon

bindkey '^E^E' edit-command-line
bindkey '^Ed' folder-chooser
bindkey '^Ef' file-chooser
bindkey '^Ec' carry-ranger-cd
bindkey '^Ea' volume-control
bindkey '^Eh' open-htop
bindkey -s '^Et' 'tt^M'
bindkey -s ',R' 'source ~/.zshrc^M'

bindkey -r '^[OA'
bindkey -r '^[OB'
bindkey -r '^N'
bindkey -r '^P'
bindkey -r '^S'

bindkey '^H' emacs-backward-word
bindkey '^J' history-substring-search-down
bindkey '^K' history-substring-search-up
bindkey '^L' emacs-forward-word

export QT_STYLE_OVERRIDE=GTK+
export STEAM_FRAME_FORCE_CLOSE=1
export TERM='xterm-termite'
